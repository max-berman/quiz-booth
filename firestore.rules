rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Games: users can CRUD their own games, read public games
    match /games/{gameId} {
      allow read: if resource.data.isPublic == true ||
                   resource.data.userId == request.auth.uid;
      allow create: if request.auth != null &&
                     request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null &&
                             resource.data.userId == request.auth.uid;
    }

    // Questions: tied to games
    match /questions/{questionId} {
      allow read: if exists(/databases/$(database)/documents/games/$(resource.data.gameId)) &&
                   (resource.data.gameId.isPublic == true ||
                    resource.data.gameId.userId == request.auth.uid);
      allow create, update, delete: if request.auth != null &&
                                     exists(/databases/$(database)/documents/games/$(request.resource.data.gameId)) &&
                                     resource.data.gameId.userId == request.auth.uid;
    }

    // Players: anyone can create, game creator can read
    match /players/{playerId} {
      allow create: if true; // Anyone can submit scores
      allow read: if request.auth != null &&
                   exists(/databases/$(database)/documents/games/$(resource.data.gameId)) &&
                   resource.data.gameId.userId == request.auth.uid;
    }

    // Usage tracking: users can only access their own data
    match /usageEvents/{eventId} {
      allow read, write: if request.auth != null &&
                           resource.data.userId == request.auth.uid;
    }

    match /usageCounters/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only backend can write
    }

    match /userPlans/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only backend can write
    }
  }
}
